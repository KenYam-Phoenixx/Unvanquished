/*
 *	 _   _                                   _     _              _ 
 *	| | | |                                 (_)   | |            | |
 *	| | | |_ ____   ____ _ _ __   __ _ _   _ _ ___| |__   ___  __| |
 *	| | | | '_ \ \ / / _` | '_ \ / _` | | | | / __| '_ \ / _ \/ _` |
 *	| |_| | | | \ V / (_| | | | | (_| | |_| | \__ \ | | |  __/ (_| |
 *	 \___/|_| |_|\_/ \__,_|_| |_|\__, |\__,_|_|___/_| |_|\___|\__,_|
 *	                                | |                             
 *	                                |_|
 *
 *	entity definition file
 *	
 */

/**
 *
 *	WorldSpawn
 *	==========
 *
 */

/*QUAKED worldspawn (0 0 0) ?
Used for game-world global options.
Every map should have exactly one.

message: Text to print during connection process. Used for the name of level.
music: path/name of looping .wav file used for level's music (eg. music/sonic5.wav).
gravity: level gravity [g_gravity (800)]

humanBuildPoints: maximum amount of power the humans can use. [g_humanBuildPoints]
humanRepeaterBuildPoints: maximum amount of power the humans can use around each repeater. [g_humanRepeaterBuildPoints]
alienBuildPoints: maximum amount of sentience available to the overmind. [g_alienBuildPoints]

humanMaxStage: The highest stage the humans are allowed to use (0/1/2). [g_alienMaxStage (2)]
alienMaxStage: The highest stage the aliens are allowed to use (0/1/2). [g_humanMaxStage (2)]

disabledEquipment: A comma delimited list of human weapons or upgrades to disable for this map. [g_disabledEquipment ()]
disabledClasses: A comma delimited list of alien classes to disable for this map. [g_disabledClasses ()]
disabledBuildables: A comma delimited list of buildables to disable for this map. [g_disabledBuildables ()]

-------- Q3MAP2 KEYS --------
_ambient OR ambient: Adds a constant value to overall lighting. Use is not recommended. Ambient light will have a tendency to flatten out variations in light and shade.
_color: RGB value for ambient light color (default is 0 0 0).
gridsize: Dynamic Light Granularity - granularity of the lightgrid created by q3map. Value is three integers separated by spaces, representing number of units between grid points in X Y Z. Default gridsize value is 128 128 256. Use larger powers of 2 to reduce BSP size and compile time on very large maps.
_minlight: Minimum light value, levelwide. Uses the _color key to set color. Does not add unlike ambient.
_minvertexlight: Minimum vertex lighting, levelwide.
_mingridlight: Minimum lightgrid (dynamic entity lighting) levelwide.
_noshadersun: Ignore q3map_sun/sun directives in sky shaders and ONLY use entity sun lights.
_lightmapscale OR lightmapscale OR _ls: Lightmap Scale - Floating point value scaling the resolution of lightmaps on brushes/patches in the world. Can be overridden in func_group (or other entities) (default 1.0).
_keeplights: Keep light entities in the BSP. Normally stripped out by the BSP process and read from the .map file by the lighting phase.

_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix. Overridable in entities.
_foghull: Shader to use for "fog hull." Foghull shader should be a sky shader. Omit the "textures/" prefix.
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.

_blocksize: BSP Block Size - q3map always splits the BSP tree along the planes X=_blocksize*n and Y=_blocksize*n. Default _blocksize value is 1024. Increase the blocksize using larger powers of 2 to reduce compile times on very large maps with a low structural brush density.
_farplanedist: Limit on how many units the vis phase of compilation can see. Used in combination with level-wide fog, it can help reduce r_speeds on large, open maps.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

Reserved or Currently unused
----------------------------
humanStage2Threshold: The number of kills the humans must aquire to advance to stage 2. Defaults to [g_humanStage2Threshold].
humanStage3Threshold: The number of kills the humans must aquire to advance to stage 3. Defaults to [g_humanStage3Threshold].
alienStage2Threshold: The number of kills the aliens must aquire to advance to stage 2. Defaults to [g_alienStage2Threshold].
alienStage3Threshold: The number of kills the aliens must aquire to advance to stage 3. Defaults to [g_alienStage3Threshold].
*/


/**
 *
 *	Information entities
 *	====================
 *	info entities don't do anything at all, but provide positional
 *	information for things controlled by other processes
 *
 *	Deprecated Entities: info_notnull, info_null; use target_position instead
 *
 */

//
//	Positional Information
//

/*QUAKED path_corner (.5 .3 0) (-8 -8 -8) (8 8 8)
Path corner entity that func_trains can be made to follow.

target, target2, target3, target4: point to next path_corner in the path and/or other targets to fire when the path corner is reached
targetname, targetname2, targetname3, targetname3: the train following the path or the previous path_corner in the path has to point to one of these.
speed: speed of func_train while moving to the next path corner. This will override the speed value of the train.
wait: number of seconds func_train will pause on path corner before moving to next path corner (default 0 - see Notes).

-------- NOTES --------
Setting the wait key to -1 will not make the train stop on the path corner, it will simply default to 0.
*/

//
//	Light Entities
// 
/*QUAKED light (.65 .65 1) (-8 -8 -8) (8 8 8) LINEAR NOANGLE UNUSED1 UNUSED2 NOGRIDLIGHT
Non-displayed point light source. The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
Especially a target_position is well suited for targeting.

-------- Q3MAP2 KEYS --------
target: Lights pointed at a target will be spotlights. This will only take targetname and not the multi-targetnames into account
radius: overrides the default 64 unit radius of a spotlight at the target point.
_light OR light: overrides the default 300 intensity.
_color: weighted RGB value of light color (default white - 1.0 1.0 1.0).
_sun: Set this key to 1 on a spotlight to make an infinite sun light.
fade: Fades light attenuation. Only affects linear lights.
scale: Scales light attentation, from SOF2/JK2. Scales the "light" value.

-------- SPAWNFLAGS --------
LINEAR: Use a linear falloff. Default is inverse distance squared (more realistic).
NOANGLE: Ignore angle attenuation.
NOGRIDLIGHT: Do not affect the lightgrid (dynamic entity lighting).
*/

/*QUAKED lightJunior (0 0.7 0.3) (-6 -6 -6) (6 6 6) LINEAR NOANGLE UNUSED1 UNUSED2 NOGRIDLIGHT
Non-displayed point light source THAT ONLY AFFECTS ENTITIES (lightgrid). The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
Especially a target_position is well suited for targeting.

-------- Q3MAP2 KEYS --------
target: Lights pointed at a target will be spotlights. This will only take targetname and not the multi-targetnames into account
radius: overrides the default 64 unit radius of a spotlight at the target point.
_light OR light: overrides the default 300 intensity.
_color: weighted RGB value of light color (default white - 1.0 1.0 1.0).
_sun: Set this key to 1 on a spotlight to make an infinite sun light.
fade: Fades light attenuation. Only affects linear lights.
scale: Scales light attentation, from SOF2/JK2. Scales the "light" value.

-------- SPAWNFLAGS --------
LINEAR: Use a linear falloff. Default is inverse distance squared (more realistic).
NOANGLE: Ignore angle attenuation.
NOGRIDLIGHT: Do not affect the lightgrid (dynamic entity lighting). Setting this spawnflag will disable this light entirely.
*/

/**
 *
 *	Functional entities - func_*
 *	============================
 *
 */

/*QUAKED func_group (0 .5 .8) ?
This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc).
You cannot group entities with this. Groups are turned into whole brushes by the utilities.

-------- Q3MAP2 KEYS --------
_lightmapscale: Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.

-------- Q3MAP2 TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value is the number unique root shaders that will be use on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.

-------- NOTES --------
The TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components. To make a func_group into a terrain entity, refer to the Terrain Construction documentation.
*/

/**
 *
 * 	Target Entities - target_*
 * 	============================
 * 	Targets perform no action by themselves.
 *	Instead they are targeted by other entities,
 *	like being triggered by a trigger_ entity.
 *
 */

/*QUAKED target_position (0 .5 0) (-8 -8 -8) (8 8 8)
Used as a positional target for in-game calculation.
Other entities like light, misc_portal_camera and trigger_push (jump pads)
might use it for aiming.

targetname, targetname2, targetname3, targetname3: the names under which this position can be referenced

-------- NOTES --------
To make a jump pad, place this entity at the highest point of the jump and target it with a trigger_push entity.
*/

/*QUAKED target_relay (0 .7 .7) (-8 -8 -8) (8 8 8) HUMAN_ONLY ALIEN_ONLY RANDOM
This can only be activated by other triggers which will cause it in turn to activate its own targets.
If wait, delay or the random time variance is set, it will wait until it is relaying by firing its targets, much like the former target_delay

targetname, targetname2, targetname3, targetname3: activating trigger points to one of these.
target, target2, target3, target4: this points to entities to activate when this entity is triggered. RANDOM chooses whether all gets executed or one gets selected Randomly.
wait OR delay: delay in seconds from when this gets triggered to when it fires its own targets (default approx. 1).
random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).

-------- SPAWNFLAGS --------
HUMAN_ONLY: only human team players can activate trigger.
ALIEN_ONLY: only alien team players can activate trigger.
RANDOM: one one of the targeted entities will be triggered at random.
-------- NOTES --------
When the random key (not to be confused with the RANDOM-spawnflag) is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
*/

/*QUAKED target_speaker (0 .7 .7) (-8 -8 -8) (8 8 8) LOOPED_ON LOOPED_OFF GLOBAL ACTIVATOR
Sound generating entity that plays .wav files. Normal non-looping sounds play each time the target_speaker is triggered. Looping sounds can be set to play by themselves (no activating trigger) or be toggled on/off by a trigger.
-------- KEYS --------
noise: path/name of .wav file to play (eg. sound/world/growl1.wav - see Notes).
wait: delay in seconds between each time the sound is played ("random" key must be set - see Notes).
random: random time variance in seconds added or subtracted from "wait" delay ("wait" key must be set - see Notes).
targetname, targetname2, targetname3, targetname3: the activating button or trigger points to one of these.
-------- SPAWNFLAGS --------
LOOPED_ON: sound will loop and initially start on in level (will toggle on/off when triggered).
LOOPED_OFF: sound will loop and initially start off in level (will toggle on/off when triggered).
GLOBAL: sound will play full volume throughout the level.
ACTIVATOR: sound will play only for the player that activated the target.
-------- NOTES --------
The path portion value of the "noise" key can be replaced by the implicit folder character "*" for triggered sounds that belong to a particular player model. For example, if you want to create a "bottomless pit" in which the player screams and dies when he falls into, you would place a trigger_multiple over the floor of the pit and target a target_speaker with it. Then, you would set the "noise" key to "*falling1.wav". The * character means the current player model's sound folder. So if your current player model is Visor, * = sound/player/visor, if your current player model is Sarge, * = sound/player/sarge, etc. This cool feature provides an excellent way to create "player-specific" triggered sounds in your levels.
The combination of the "wait" and "random" keys can be used to play non-looping sounds without requiring an activating trigger but both keys must be used together. The value of the "random" key is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
*/

/**
 *
 *	Trigger Entities - trigger_*
 *	============================
 *	Triggers are either special conditions or brush objects that
 *	cause an effect when contacted by a living player,
 *	usually involving firing targets.
 *
 *	While almost everything could be done with
 *	a single trigger class and different targets, triggered effects
 *	could not be client side predicted (push and teleport).
 *
 */
 
/*QUAKED trigger_always (.5 .5 .5) (-8 -8 -8) (8 8 8)
Automatic trigger. It will fire the entities it targets as soon as it spawns in the game.

target, target2, target3, target4: trigger any entity matching one of these references.
*/

/*QUAKED trigger_timer (0 .5 .8) (-8 -8 -8) (8 8 8) START_ON
Time delay trigger that will continuously fire its targets after a preset time delay. The time delay can also be randomized. When triggered, the timer will toggle on/off.
Formerly known as func_timer.

wait: delay in seconds between each triggering of its targets (default 1).
random: random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).
target, target2, target3, target4: this points to the entities to trigger.
targetname, targetname2, targetname3, targetname3: any triggering entity that targets one of these names will toggle the timer on/off when activated.

-------- SPAWNFLAGS --------
START_ON: timer will start on in the game and continuously fire its targets.

-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay.
The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
*/

/**
 *
 *	Buildables aka Team Entities
 *	============================
 *	Since the hovel got removed,
 *	model="models/buildables/hovel/hovel.md3"
 *	might at some point be used for WIP-buildables 
 */
 
//
// Human Team
//
/*QUAKED team_human_spawn (0 .2 1) (-40 -40 -4) (40 40 4)
The human spawn point.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/telenode/telenode.md3"
*/
/*QUAKED team_human_armoury (0 .2 1) (-40 -40 -13) (40 40 50)
The human armoury.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/arm/arm.md3"
*/
/*QUAKED team_human_dcc (0 .2 1) (-35 -35 -13) (35 35 47)
The human defense computer.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/dcc/dcc.md3"
*/
/*QUAKED team_human_medistat (0 .2 1) (-35 -35 -7) (35 35 7)
The human medical station.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/medistat/medistat.md3"
*/
/*QUAKED team_human_mgturret (0 .2 1) (-25 -25 -20) (25 25 20)
The human machinegun turret.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/mgturret/mgturret.md3"
*/
/*QUAKED team_human_reactor (0 .2 1) (-50 -50 -15) (50 50 95)
The human reactor.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/reactor/reactor.md3"
*/
/*QUAKED team_human_repeater (0 .2 1) (-15 -15 -15) (15 15 25)
The human repeater.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/repeater/repeater.md3"
*/
/*QUAKED team_human_tesla (0 .2 1) (-22 -22 -40) (22 22 40)
The human tesla generator.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/tesla/tesla.md3"
*/
//
// Alien Team
//
/*QUAKED team_alien_spawn (1 .2 0) (-15 -15 -15) (15 15 15)
The alien spawn point.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/eggpod/eggpod.md3"
*/
/*QUAKED team_alien_acid_tube (1 .2 0) (-25 -25 -25) (25 25 25)
The alien acid tube.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/acid_tube/acid_tube.md3"
*/
/*QUAKED team_alien_barricade (1 .2 0) (-35 -35 -15) (35 35 60)
The alien barricade.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/barricade/barricade.md3"
*/
/*QUAKED team_alien_booster (1 .2 0) (-26 -26 -9) (26 26 9)
The alien booster.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/booster/booster.md3"
*/
/*QUAKED team_alien_overmind (1 .2 0) (-45 -45 -15) (45 45 95)
The alien overmind.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/overmind/overmind.md3"
*/
/*QUAKED team_alien_trapper (1 .2 0) (-15 -15 -15) (15 15 15)
The alien trapper.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/trapper/trapper.md3"
*/
/*QUAKED team_alien_hive (1 .2 0) (-35 -35 -25) (35 35 25)
The alien hive.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/buildables/hive/hive.md3"
*/